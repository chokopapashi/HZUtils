/*
 * Copyright (c) 2013, Hidekatsu Hirose
 * Copyright (c) 2013, Hirose-Zouen
 * This file is subject to the terms and conditions defined in
 * This file is subject to the terms and conditions defined in
 * file 'LICENSE.txt', which is part of this source code package.
 */

package org.hirosezouen.hznet

object HZPacket {

    case class Ether_Packet(data: IndexedSeq[Byte]) {

        def ethType = unsignedBigEndianShortBytes2Int(data.slice(12,14))
        def ip: Option[IP_Packet] = ethType match {
            case EthernetType.IP => IP_Packet(data.drop(EtherData.HEADER_SIZE))
            case _ => None
        }
    }
    object Ether_Packet {
        def HEADER_SIZE = 14
        private abstract class EthernetType(value: Int) {
            def apply() = value
        }
        object EthernetType {
            def 
            def IP: Int = 0x0800
        }
    }

    case class IP_Packet(data: IndexedSeq[Byte]) {
        def headerBytes = data.take(IPData.HEADER_SIZE)

        def ether = UDPData(data.drop(IPData.HEADER_SIZE))
        def  = UDPData(data.drop(IPData.HEADER_SIZE))
    }

    object IPData {
        def HEADER_SIZE = 20
    }


}

